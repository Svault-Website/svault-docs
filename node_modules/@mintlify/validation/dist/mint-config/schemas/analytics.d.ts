import { z } from 'zod';
declare const amplitudeConfigInterfaceSchema: z.ZodObject<{
    apiKey: z.ZodString;
}, "strip", z.ZodTypeAny, {
    apiKey: string;
}, {
    apiKey: string;
}>;
declare const clearbitConfigInterfaceSchema: z.ZodObject<{
    publicApiKey: z.ZodString;
}, "strip", z.ZodTypeAny, {
    publicApiKey: string;
}, {
    publicApiKey: string;
}>;
declare const fathomConfigInterfaceSchema: z.ZodObject<{
    siteId: z.ZodString;
}, "strip", z.ZodTypeAny, {
    siteId: string;
}, {
    siteId: string;
}>;
declare const googleAnalyticsConfigInterfaceSchema: z.ZodObject<{
    measurementId: z.ZodString;
}, "strip", z.ZodTypeAny, {
    measurementId: string;
}, {
    measurementId: string;
}>;
declare const googleTagManagerConfigInterfaceSchema: z.ZodObject<{
    tagId: z.ZodString;
}, "strip", z.ZodTypeAny, {
    tagId: string;
}, {
    tagId: string;
}>;
declare const hotjarConfigInterfaceSchema: z.ZodObject<{
    hjid: z.ZodString;
    hjsv: z.ZodString;
}, "strip", z.ZodTypeAny, {
    hjid: string;
    hjsv: string;
}, {
    hjid: string;
    hjsv: string;
}>;
declare const koalaConfigInterfaceSchema: z.ZodObject<{
    publicApiKey: z.ZodEffects<z.ZodString, string, string>;
}, "strip", z.ZodTypeAny, {
    publicApiKey: string;
}, {
    publicApiKey: string;
}>;
declare const logrocketConfigInterfaceSchema: z.ZodObject<{
    appId: z.ZodString;
}, "strip", z.ZodTypeAny, {
    appId: string;
}, {
    appId: string;
}>;
declare const mixpanelConfigInterfaceSchema: z.ZodObject<{
    projectToken: z.ZodString;
}, "strip", z.ZodTypeAny, {
    projectToken: string;
}, {
    projectToken: string;
}>;
declare const pirschConfigInterfaceSchema: z.ZodObject<{
    id: z.ZodString;
}, "strip", z.ZodTypeAny, {
    id: string;
}, {
    id: string;
}>;
declare const postHogConfigInterfaceSchema: z.ZodObject<{
    apiKey: z.ZodString;
    apiHost: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    apiKey: string;
    apiHost?: string | undefined;
}, {
    apiKey: string;
    apiHost?: string | undefined;
}>;
declare const plausibleConfigInterfaceSchema: z.ZodObject<{
    domain: z.ZodEffects<z.ZodString, string, string>;
}, "strip", z.ZodTypeAny, {
    domain: string;
}, {
    domain: string;
}>;
export type AmplitudeConfigInterface = z.infer<typeof amplitudeConfigInterfaceSchema>;
export type ClearbitConfigInterface = z.infer<typeof clearbitConfigInterfaceSchema>;
export type FathomConfigInterface = z.infer<typeof fathomConfigInterfaceSchema>;
export type GoogleAnalyticsConfigInterface = z.infer<typeof googleAnalyticsConfigInterfaceSchema>;
export type GoogleTagManagerConfigInterface = z.infer<typeof googleTagManagerConfigInterfaceSchema>;
export type HotjarConfigInterface = z.infer<typeof hotjarConfigInterfaceSchema>;
export type KoalaConfigInterface = z.infer<typeof koalaConfigInterfaceSchema>;
export type LogrocketConfigInterface = z.infer<typeof logrocketConfigInterfaceSchema>;
export type MixpanelConfigInterface = z.infer<typeof mixpanelConfigInterfaceSchema>;
export type PirschConfigInterface = z.infer<typeof pirschConfigInterfaceSchema>;
export type PostHogConfigInterface = z.infer<typeof postHogConfigInterfaceSchema>;
export type PlausibleConfigInterface = z.infer<typeof plausibleConfigInterfaceSchema>;
export declare const analyticsSchema: z.ZodObject<{
    amplitude: z.ZodOptional<z.ZodObject<{
        apiKey: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        apiKey: string;
    }, {
        apiKey: string;
    }>>;
    clearbit: z.ZodOptional<z.ZodObject<{
        publicApiKey: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        publicApiKey: string;
    }, {
        publicApiKey: string;
    }>>;
    fathom: z.ZodOptional<z.ZodObject<{
        siteId: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        siteId: string;
    }, {
        siteId: string;
    }>>;
    ga4: z.ZodOptional<z.ZodObject<{
        measurementId: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        measurementId: string;
    }, {
        measurementId: string;
    }>>;
    gtm: z.ZodOptional<z.ZodObject<{
        tagId: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        tagId: string;
    }, {
        tagId: string;
    }>>;
    hotjar: z.ZodOptional<z.ZodObject<{
        hjid: z.ZodString;
        hjsv: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        hjid: string;
        hjsv: string;
    }, {
        hjid: string;
        hjsv: string;
    }>>;
    koala: z.ZodOptional<z.ZodObject<{
        publicApiKey: z.ZodEffects<z.ZodString, string, string>;
    }, "strip", z.ZodTypeAny, {
        publicApiKey: string;
    }, {
        publicApiKey: string;
    }>>;
    logrocket: z.ZodOptional<z.ZodObject<{
        appId: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        appId: string;
    }, {
        appId: string;
    }>>;
    mixpanel: z.ZodOptional<z.ZodObject<{
        projectToken: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        projectToken: string;
    }, {
        projectToken: string;
    }>>;
    pirsch: z.ZodOptional<z.ZodObject<{
        id: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        id: string;
    }, {
        id: string;
    }>>;
    posthog: z.ZodOptional<z.ZodObject<{
        apiKey: z.ZodString;
        apiHost: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        apiKey: string;
        apiHost?: string | undefined;
    }, {
        apiKey: string;
        apiHost?: string | undefined;
    }>>;
    plausible: z.ZodOptional<z.ZodObject<{
        domain: z.ZodEffects<z.ZodString, string, string>;
    }, "strip", z.ZodTypeAny, {
        domain: string;
    }, {
        domain: string;
    }>>;
}, "strict", z.ZodTypeAny, {
    amplitude?: {
        apiKey: string;
    } | undefined;
    clearbit?: {
        publicApiKey: string;
    } | undefined;
    fathom?: {
        siteId: string;
    } | undefined;
    ga4?: {
        measurementId: string;
    } | undefined;
    gtm?: {
        tagId: string;
    } | undefined;
    hotjar?: {
        hjid: string;
        hjsv: string;
    } | undefined;
    koala?: {
        publicApiKey: string;
    } | undefined;
    logrocket?: {
        appId: string;
    } | undefined;
    mixpanel?: {
        projectToken: string;
    } | undefined;
    pirsch?: {
        id: string;
    } | undefined;
    posthog?: {
        apiKey: string;
        apiHost?: string | undefined;
    } | undefined;
    plausible?: {
        domain: string;
    } | undefined;
}, {
    amplitude?: {
        apiKey: string;
    } | undefined;
    clearbit?: {
        publicApiKey: string;
    } | undefined;
    fathom?: {
        siteId: string;
    } | undefined;
    ga4?: {
        measurementId: string;
    } | undefined;
    gtm?: {
        tagId: string;
    } | undefined;
    hotjar?: {
        hjid: string;
        hjsv: string;
    } | undefined;
    koala?: {
        publicApiKey: string;
    } | undefined;
    logrocket?: {
        appId: string;
    } | undefined;
    mixpanel?: {
        projectToken: string;
    } | undefined;
    pirsch?: {
        id: string;
    } | undefined;
    posthog?: {
        apiKey: string;
        apiHost?: string | undefined;
    } | undefined;
    plausible?: {
        domain: string;
    } | undefined;
}>;
export type AnalyticsType = z.infer<typeof analyticsSchema>;
export {};
