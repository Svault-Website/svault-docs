import { z } from 'zod';
declare const intercomSchema: z.ZodString;
declare const frontchatSchema: z.ZodString;
declare const inkeepSchema: z.ZodObject<{
    integrationApiKey: z.ZodString;
}, "strip", z.ZodTypeAny, {
    integrationApiKey: string;
}, {
    integrationApiKey: string;
}>;
export declare const integrationsSchema: z.ZodObject<{
    intercom: z.ZodOptional<z.ZodString>;
    frontchat: z.ZodOptional<z.ZodString>;
    inkeep: z.ZodOptional<z.ZodObject<{
        integrationApiKey: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        integrationApiKey: string;
    }, {
        integrationApiKey: string;
    }>>;
}, "strip", z.ZodTypeAny, {
    intercom?: string | undefined;
    frontchat?: string | undefined;
    inkeep?: {
        integrationApiKey: string;
    } | undefined;
}, {
    intercom?: string | undefined;
    frontchat?: string | undefined;
    inkeep?: {
        integrationApiKey: string;
    } | undefined;
}>;
export type IntercomType = z.infer<typeof intercomSchema>;
export type FrontchatType = z.infer<typeof frontchatSchema>;
export type InkeepType = z.infer<typeof inkeepSchema>;
export type IntegrationsType = z.infer<typeof integrationsSchema>;
export {};
