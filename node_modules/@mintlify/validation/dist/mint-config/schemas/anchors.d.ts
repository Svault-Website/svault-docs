import { z } from 'zod';
declare const anchorSchema: z.ZodObject<{
    name: z.ZodString;
    url: z.ZodString;
    icon: z.ZodOptional<z.ZodEffects<z.ZodString, string, string>>;
    iconType: z.ZodOptional<z.ZodEnum<["brands", "duotone", "light", "sharp-solid", "solid", "thin"]>>;
    color: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodObject<{
        from: z.ZodString;
        via: z.ZodOptional<z.ZodString>;
        to: z.ZodString;
    }, "strict", z.ZodTypeAny, {
        from: string;
        to: string;
        via?: string | undefined;
    }, {
        from: string;
        to: string;
        via?: string | undefined;
    }>]>>;
    isDefaultHidden: z.ZodOptional<z.ZodBoolean>;
    version: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    name: string;
    url: string;
    icon?: string | undefined;
    iconType?: "light" | "brands" | "duotone" | "sharp-solid" | "solid" | "thin" | undefined;
    color?: string | {
        from: string;
        to: string;
        via?: string | undefined;
    } | undefined;
    isDefaultHidden?: boolean | undefined;
    version?: string | undefined;
}, {
    name: string;
    url: string;
    icon?: string | undefined;
    iconType?: "light" | "brands" | "duotone" | "sharp-solid" | "solid" | "thin" | undefined;
    color?: string | {
        from: string;
        to: string;
        via?: string | undefined;
    } | undefined;
    isDefaultHidden?: boolean | undefined;
    version?: string | undefined;
}>;
export declare const anchorsSchema: z.ZodArray<z.ZodObject<{
    name: z.ZodString;
    url: z.ZodString;
    icon: z.ZodOptional<z.ZodEffects<z.ZodString, string, string>>;
    iconType: z.ZodOptional<z.ZodEnum<["brands", "duotone", "light", "sharp-solid", "solid", "thin"]>>;
    color: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodObject<{
        from: z.ZodString;
        via: z.ZodOptional<z.ZodString>;
        to: z.ZodString;
    }, "strict", z.ZodTypeAny, {
        from: string;
        to: string;
        via?: string | undefined;
    }, {
        from: string;
        to: string;
        via?: string | undefined;
    }>]>>;
    isDefaultHidden: z.ZodOptional<z.ZodBoolean>;
    version: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    name: string;
    url: string;
    icon?: string | undefined;
    iconType?: "light" | "brands" | "duotone" | "sharp-solid" | "solid" | "thin" | undefined;
    color?: string | {
        from: string;
        to: string;
        via?: string | undefined;
    } | undefined;
    isDefaultHidden?: boolean | undefined;
    version?: string | undefined;
}, {
    name: string;
    url: string;
    icon?: string | undefined;
    iconType?: "light" | "brands" | "duotone" | "sharp-solid" | "solid" | "thin" | undefined;
    color?: string | {
        from: string;
        to: string;
        via?: string | undefined;
    } | undefined;
    isDefaultHidden?: boolean | undefined;
    version?: string | undefined;
}>, "many">;
export declare const topAnchorSchema: z.ZodObject<{
    name: z.ZodString;
    icon: z.ZodOptional<z.ZodString>;
    iconType: z.ZodOptional<z.ZodEnum<["brands", "duotone", "light", "sharp-solid", "solid", "thin"]>>;
}, "strict", z.ZodTypeAny, {
    name: string;
    icon?: string | undefined;
    iconType?: "light" | "brands" | "duotone" | "sharp-solid" | "solid" | "thin" | undefined;
}, {
    name: string;
    icon?: string | undefined;
    iconType?: "light" | "brands" | "duotone" | "sharp-solid" | "solid" | "thin" | undefined;
}>;
export type AnchorType = z.infer<typeof anchorSchema>;
export type AnchorsType = z.infer<typeof anchorsSchema>;
export type TopAnchorType = z.infer<typeof topAnchorSchema>;
export {};
