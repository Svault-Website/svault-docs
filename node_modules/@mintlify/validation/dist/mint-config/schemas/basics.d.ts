import { z } from 'zod';
import { NavbarLinkType } from '../types/enums';
export declare const nameSchema: z.ZodString;
export declare const logoSchema: z.ZodUnion<[z.ZodString, z.ZodObject<{
    light: z.ZodString;
    dark: z.ZodString;
    href: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    light: string;
    dark: string;
    href?: string | undefined;
}, {
    light: string;
    dark: string;
    href?: string | undefined;
}>]>;
export declare const modeToggleSchema: z.ZodObject<{
    default: z.ZodOptional<z.ZodEnum<["light", "dark"]>>;
    isHidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    default?: "light" | "dark" | undefined;
    isHidden?: boolean | undefined;
}, {
    default?: "light" | "dark" | undefined;
    isHidden?: boolean | undefined;
}>;
export declare const isWhiteLabeledSchema: z.ZodBoolean;
export declare const metadataSchema: z.ZodRecord<z.ZodString, z.ZodString>;
export declare const footerSocialsSchema: z.ZodUnion<[z.ZodArray<z.ZodObject<{
    type: z.ZodString;
    url: z.ZodString;
}, "strip", z.ZodTypeAny, {
    type: string;
    url: string;
}, {
    type: string;
    url: string;
}>, "many">, z.ZodRecord<z.ZodString, z.ZodString>]>;
export declare const feedbackSchema: z.ZodObject<{
    suggestEdit: z.ZodOptional<z.ZodBoolean>;
    raiseIssue: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    suggestEdit?: boolean | undefined;
    raiseIssue?: boolean | undefined;
}, {
    suggestEdit?: boolean | undefined;
    raiseIssue?: boolean | undefined;
}>;
export declare const searchSchema: z.ZodObject<{
    prompt: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    prompt?: string | undefined;
}, {
    prompt?: string | undefined;
}>;
export declare const redirectsSchema: z.ZodEffects<z.ZodArray<z.ZodObject<{
    source: z.ZodString;
    destination: z.ZodString;
}, "strip", z.ZodTypeAny, {
    source: string;
    destination: string;
}, {
    source: string;
    destination: string;
}>, "many">, {
    source: string;
    destination: string;
}[], {
    source: string;
    destination: string;
}[]>;
export declare const createCtaButtonSchema: (ctaButtonName: string) => z.ZodUnion<[z.ZodObject<{
    type: z.ZodOptional<z.ZodLiteral<"link">>;
    name: z.ZodString;
    url: z.ZodString;
}, "strict", z.ZodTypeAny, {
    name: string;
    url: string;
    type?: "link" | undefined;
}, {
    name: string;
    url: string;
    type?: "link" | undefined;
}>, z.ZodObject<{
    type: z.ZodLiteral<"github">;
    url: z.ZodString;
}, "strict", z.ZodTypeAny, {
    type: "github";
    url: string;
}, {
    type: "github";
    url: string;
}>]>;
export type LogoType = z.infer<typeof logoSchema>;
export type FeedbackType = z.infer<typeof feedbackSchema>;
export type FooterSocialsType = z.infer<typeof footerSocialsSchema>;
export type NavbarLink = {
    url: string;
    type?: NavbarLinkType;
    name?: string;
};
export declare const iconTypes: readonly ["brands", "duotone", "light", "regular", "sharp-solid", "solid", "thin"];
export type IconType = (typeof iconTypes)[number];
